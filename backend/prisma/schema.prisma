generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



enum Role {
  NGO
  ADMIN
  COMPANY
}

enum ProjectStatus {
  DRAFT
  SUBMITTED
  UNDER_REVIEW
  SITE_VISIT_REQUIRED
  VERIFIED
  APPROVED
  CREDITS_ISSUED
  MONITORING_REQUIRED
  REJECTED
}

model User {
  id         String   @id @default(cuid())
  name       String
  email      String   @unique
  password   String
  role       Role
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  pushToken  String?
  wallet     String?
  credits    Float    @default(0)
  projects   Project[] @relation("ownerProjects")
  auditLogs      AuditLog[]
  transactions   Transaction[]
}

model Project {
  id          String       @id @default(cuid())
  title       String
  description String?
  area        Float?
  species     String?
  saplings    Int?
  lat         Float?
  lng         Float?
  language    String?
  status      ProjectStatus @default(DRAFT)
  aiConfidence Float?
  aiLabel     String?
  ownerId     String
  owner       User @relation(fields: [ownerId], references: [id], name: "ownerProjects")
  uploads     Upload[]
  verifications Verification[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tokenId     String?
  cid         String?
  auditLogs    AuditLog[]
  transactions Transaction[]
}

model Upload {
  id         String   @id @default(cuid())
  projectId  String
  project    Project  @relation(fields: [projectId], references: [id])
  filename   String
  cid        String
  fileType   String
  createdAt  DateTime @default(now())
}

model Verification {
  id         String   @id @default(cuid())
  projectId  String
  project    Project  @relation(fields: [projectId], references: [id])
  label      String
  confidence Float
  meta       String?
  createdAt  DateTime @default(now())
}

model AuditLog {
  id         String   @id @default(cuid())
  userId     String?
  user       User?    @relation(fields: [userId], references: [id])
  projectId  String?
  project    Project? @relation(fields: [projectId], references: [id])
  action     String
  notes      String?
  txHash     String?
  createdAt  DateTime @default(now())
}

model Transaction {
  id          String  @id @default(cuid())
  companyId   String
  company     User    @relation(fields: [companyId], references: [id])
  projectId   String?
  project     Project? @relation(fields: [projectId], references: [id])
  amount      Float
  status      String
  invoiceUrl  String?
  txHash      String?
  createdAt   DateTime @default(now())
}

model AnalyticsEvent {
  id        String   @id @default(cuid())
  eventName String
  payload   Json?
  createdAt DateTime @default(now())
}
